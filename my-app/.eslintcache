[{"/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/index.js":"1","/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/App.js":"2","/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/reportWebVitals.js":"3","/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/pages/Home.jsx":"4","/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/static/LoginForm.jsx":"5","/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/static/SignupForm.jsx":"6","/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/Global.js":"7","/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/static/Errors.jsx":"8","/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/static/Error.jsx":"9","/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/pages/Posts/PostsContainter.jsx":"10","/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/pages/Posts/PostInput.jsx":"11","/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/static/ErrorPage.jsx":"12","/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/store.js":"13","/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/pages/Posts/PostCards.jsx":"14","/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/pages/Posts/Search.jsx":"15","/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/Navigation/MenuNav.jsx":"16","/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/pages/Favorites.jsx":"17","/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/pages/Posts/PostDetails.jsx":"18","/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/pages/Posts/EditPost.jsx":"19","/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/firebase.jsx":"20"},{"size":198,"mtime":1659716767912,"results":"21","hashOfConfig":"22"},{"size":2425,"mtime":1659550843895,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1654283970989,"results":"24","hashOfConfig":"22"},{"size":184,"mtime":1659474556184,"results":"25","hashOfConfig":"22"},{"size":1966,"mtime":1659059533548,"results":"26","hashOfConfig":"22"},{"size":3011,"mtime":1659060165439,"results":"27","hashOfConfig":"22"},{"size":95,"mtime":1659028493125,"results":"28","hashOfConfig":"22"},{"size":244,"mtime":1659059967040,"results":"29","hashOfConfig":"22"},{"size":175,"mtime":1659060217316,"results":"30","hashOfConfig":"22"},{"size":1085,"mtime":1659715286430,"results":"31","hashOfConfig":"22"},{"size":5758,"mtime":1659725614090,"results":"32","hashOfConfig":"22"},{"size":198,"mtime":1659028493128,"results":"33","hashOfConfig":"22"},{"size":441,"mtime":1659563633842,"results":"34","hashOfConfig":"22"},{"size":986,"mtime":1659496944589,"results":"35","hashOfConfig":"22"},{"size":700,"mtime":1659111344645,"results":"36","hashOfConfig":"22"},{"size":1998,"mtime":1659106179563,"results":"37","hashOfConfig":"22"},{"size":381,"mtime":1659403688601,"results":"38","hashOfConfig":"22"},{"size":1514,"mtime":1659719353591,"results":"39","hashOfConfig":"22"},{"size":3952,"mtime":1659470311356,"results":"40","hashOfConfig":"22"},{"size":586,"mtime":1659720878715,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1whrksp",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},"/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/index.js",[],["91","92"],"/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/App.js",[],"/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/reportWebVitals.js",[],["93","94"],"/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/pages/Home.jsx",[],"/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/static/LoginForm.jsx",["95"],"import React, {useEffect, useState} from 'react'\nimport {headers} from '../../Global'\nimport Errors from './Errors';\nimport { useNavigate } from 'react-router-dom';\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n\nfunction LoginForm({ loginUser, addErrors, clearErrors, errors }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  function handleLogin(e){\n    e.preventDefault();\n    \n    fetch('/login',{\n      method: \"POST\",\n      headers: headers,\n      body: JSON.stringify({\n        user: { \n          username: username,\n          password: password,\n        }}),\n      })\n      .then((r)=>r.json())\n      .then(data=>{\n        if(data.id){\n          loginUser(data);\n          navigate(\"/\");\n        }else{\n          addErrors(data.errors)\n        }\n        })\n    }\n\n    useEffect(()=>{\n      return()=>clearErrors();\n    },[])\n      \n  return (\n    <div>\n       <h2 className='header'>Log In</h2>\n       \n      <Form onSubmit={handleLogin}>\n        <Form.Group className=\"ms-5\" controlId=\"formGroupUsername\">\n          <Form.Label>User name:</Form.Label>\n          <Form.Control\n            type=\"username\"\n            autoComplete='off'\n            placeholder=\"Enter username\"\n            value={username}\n            onChange={(e)=>setUsername(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"ms-5\" controlId=\"formGroupPassword\">\n          <Form.Label>Password:</Form.Label>\n          <Form.Control\n            type = \"password\"\n            value={password}\n            onChange={(e)=>setPassword(e.target.value)}\n            autoComplete='current-password'\n          />\n        </Form.Group>\n        <br />\n        <Button className=\"ms-5\" variant=\"primary\" size=\"sm\" type=\"submit\">Submit</Button>\n        \n      </Form>\n      <Errors errors={errors} />\n    </div>\n  )\n}\n\nexport default LoginForm","/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/static/SignupForm.jsx",["96"],"import React, {useEffect, useState} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {headers} from \"../../Global\";\nimport Errors from './Errors';\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport \"./styles.css\"\n\nfunction SignupForm({loginUser, addErrors, clearErrors, errors}) {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const navigate = useNavigate();\n\n  function handleSignup(e){\n    e.preventDefault();\n\n      fetch(\"/signup\", {\n        method: \"POST\",\n        headers: headers,\n        body: JSON.stringify({\n          user: {\n            username: username,\n            email: email,\n            password: password,\n            password_confirmation: passwordConfirmation,\n        }}),\n      })\n      .then((r)=>r.json())\n      .then(data=>{\n        if(data.id){\n          loginUser(data);\n          navigate(\"/\")\n        }else{\n          addErrors([data.error])\n        }\n      })\n  }\n\n  useEffect(()=>{\n    return()=>clearErrors()\n  },[])\n\n  return (\n    <div>\n      <h2 className='header'>Sign up Form</h2>\n      <Form onSubmit = {handleSignup}>\n        <Form.Group className=\"ms-5\" controlId=\"formGroupUsername\">\n          <Form.Label htmlFor=\"usename\">Username: </Form.Label>\n          <Form.Control \n            type = \"text\"\n            autoComplete='off'\n            placeholder = \"Enter username\"\n            value = {username}\n            onChange = {(e)=>setUsername(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"ms-5\" controlId=\"formGroupEmail\">\n          <Form.Label htmlFor=\"email\">Email: </Form.Label>\n          <Form.Control \n            type = \"email\"\n            autoComplete='off'\n            placeholder = \"Enter Email\"\n            value = {email}\n            onChange = {(e)=>setEmail(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"ms-5\" controlId=\"formGroupPassword\">\n        <Form.Label htmlFor = \"password\">Password: </Form.Label>\n        <Form.Control\n          type = \"password\"\n          value = {password}\n          placeholder= \"Enter Password\"\n          onChange = {(e)=> setPassword(e.target.value)}\n          autoComplete = \"current-password\"\n        />\n        </Form.Group>\n        <Form.Group className=\"ms-5\" controlId=\"formGroupPassword\">\n          <Form.Label htmlFor=\"password\">Password Confirmation: </Form.Label>\n          <Form.Control\n            type = \"password\"\n            placeholder= \"Re-enter Password\"\n            value = {passwordConfirmation}\n            onChange = {(e)=>setPasswordConfirmation(e.target.value)}\n            autoComplete = \"current-password\"\n          />\n        </Form.Group>\n        <Button type=\"submit\" className='ms-5'>Sign up</Button>\n      </Form>\n      <Errors errors={errors} />\n   </div>\n  )\n}\n\nexport default SignupForm","/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/Global.js",[],"/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/static/Errors.jsx",[],"/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/static/Error.jsx",[],"/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/pages/Posts/PostsContainter.jsx",[],"/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/pages/Posts/PostInput.jsx",["97","98","99","100"],"import React, {useState, useEffect} from 'react';\nimport \"./post.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport PostCards from './PostCards';\nimport { storage } from \"../../../firebase\";\nimport { ref, uploadBytes, listAll, getDownloadURL } from \"firebase/storage\";\nimport { v4 } from \"uuid\";\n\nfunction PostInput({user}) {\n  const [itemTitle, setItemTitle] = useState(\"\");\n  const [itemPrice, setItemPrice] = useState(\"\");\n  const [itemDescription, setItemDescription] = useState(\"\");\n  const [images, setImages] = useState(null);\n  const [categoryName, setCategoryName] = useState(\"\"); \n  const [chosenCategory, setChosenCategory] = useState(\"\");\n  const [favorite, setFavorite] = useState(false)\n  const [imageUrl, setImageUrl] = useState([])\n\n  // const forSaleItemsArray = fetch('/for_sale_items',{\n  //   method: \"GET\",\n  //   headers: {\n  //     'content-type': 'application/json',\n  //     'accept': 'application/json'\n  //   }\n  //   .then(r =>r.json())\n  //   .then((saleItems)=>)\n  // })\n\n  useEffect(()=>{\n    fetch('/categories',{\n      method: \"GET\",\n      headers: {\n        'content-type': 'application/json',\n        'accept': 'application/json'\n      }\n    })\n    .then((r)=>r.json())\n    .then((data)=>setCategoryName(data))\n  },[])\n  \n  // const ownItemsArray = user && selectAllPosts\n  // .filter((item)=>{\n  //   return user.id === item.user_id})\n  // .map((item)=> {\n  //     return(\n  //       <PostCards \n  //         key={item.id} \n  //         item={item}\n  //       />\n  //     )\n  //   })\n\n  function handleSubmitPost(e){\n    e.preventDefault();\n    const formData = ({ \n      user_id: user.id,\n      category_id: chosenCategory,\n      itemTitle: itemTitle,\n      itemPrice: itemPrice,\n      itemDescription: itemDescription,\n      images: images,\n    });\n    if (itemTitle && images) {\n        fetch(\"/for_sale_items\",{\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Accept\": \"application/json\",\n        },\n        body: JSON.stringify(formData)\n      })\n      .then((r)=> r.json())\n      .then((data) => {\n        console.log(data)\n    })\n    setItemTitle('');\n    setItemPrice('');\n    setItemDescription('');\n    setImages(null);\n    setCategoryName('');\n  }\n  }\n  \n  const imageListRef = ref(storage, \"images/\")\n  function uploadImages(){\n    if (images == null) return;\n    const imageRef = ref(storage,`images/${images.name + v4()}`);\n    uploadBytes(imageRef, images).then((snaphsot)=>{\n      getDownloadURL(snaphsot.ref).then(url =>{\n        setImageUrl((prev)=> [...prev, url])\n      })\n    })\n  }\n  \n    useEffect(()=>{\n      listAll(imageListRef).then((r)=>{\n        r.items.forEach((item)=>{\n          getDownloadURL(item).then((url)=> {\n            setImageUrl((prev)=> [...prev, url])\n          })\n        })\n      })\n    },[])\n  \n  return (\n    <div className=\"new-post\">\n      <h1 className='header'>Add a new posting</h1>\n      <Form id=\"newPostForm\" onSubmit={handleSubmitPost}>\n        <Form.Group className=\"ms-5\" controlId=\"formGroupUserId\">\n          <Form.Control \n            type=\"hidden\"\n            name=\"userId\"\n            value=\"user.id\"\n          />\n        </Form.Group>\n        <Form.Group className=\"ms-5\" controlId=\"formGroupPostTitle\">\n          <Form.Label>Post Title: </Form.Label>\n          <Form.Control \n            type='text'\n            name='itemTitle'\n            value={itemTitle}\n            onChange={(e)=>setItemTitle(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"ms-5\" controlId=\"formGroupItemPrice\">\n          <Form.Label>Asking Price: </Form.Label>\n          <Form.Control\n            type='number'\n            name='itemprice'\n            value={itemPrice}\n            onChange={(e)=>setItemPrice(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"ms-5\" controlId=\"formGroupItemDescription\">\n          <Form.Label>Item Description: </Form.Label>\n          <Form.Control\n            type='textarea'\n            name='itemDescription'\n            value={itemDescription}\n            onChange={(e)=>setItemDescription(e.target.value)}\n          />\n        </Form.Group>\n            <DropdownButton \n              className = \"ms-5 mt-3\"\n              id = \"dropdown-category-button\" \n              title = {categoryName && categoryName.filter((category) => category.id === chosenCategory\n                )} \n             onSelect={(e)=>setChosenCategory(e)}>\n              { \n                categoryName && categoryName.map((cat)=>{\n                    return(\n                      <Dropdown.Item eventKey={cat.id} key={cat.id}>{cat.categoryName}</Dropdown.Item>\n                    )\n                  })\n              }\n            </DropdownButton>\n          <Form.Group className=\"ms-5 mt-3\" controlId=\"formGroupImages\">\n            <Form.Control \n              type=\"file\"\n              name=\"images\"\n              multiple = \"multiple\"\n              accept='image/jpg, image/png'\n              onChange={(e)=>{setImages(e.target.files)}}\n            />\n          <Form.Label>\n            <Form.Control \n              type=\"hidden\" \n              value=\"false\"\n              ref={x => {setFavorite(false)}}\n              />\n          </Form.Label>\n          </Form.Group>\n          <Button onClick={uploadImages} type='submit' className='ms-5 mt-2'>Submit</Button>\n          {imageUrl.map((url, index)=>{\n            return <img src={url} key ={index} />\n          })}\n      </Form>\n      <h3>My Selling List:</h3>\n      {/* {ownItemsArray} */}\n    </div>\n  )\n}\n\nexport default PostInput;","/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/static/ErrorPage.jsx",[],"/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/store.js",[],["101","102"],"/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/pages/Posts/PostCards.jsx",[],"/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/pages/Posts/Search.jsx",[],"/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/Navigation/MenuNav.jsx",[],"/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/pages/Favorites.jsx",["103"],"import React from 'react'\nimport PostCards from \"./Posts/PostCards\";\n\nfunction Favorites(){\n  //function where i loop through the data to show the ones that i had favorited === in postcards!\n  // it will hold the state of t or f on favorite feature. Will be passed and displayed here!!\n  return (\n    <div>\n      <h1>Favorites</h1>\n      \n    </div>\n  )\n}\n\nexport default Favorites","/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/pages/Posts/PostDetails.jsx",["104","105"],"import React, {useEffect, useState} from 'react'\nimport { BsFillTrashFill } from \"react-icons/bs\";\nimport { useParams, useNavigate } from 'react-router-dom';\n// import EditPost from './EditPost';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\nfunction PostDetails({user, handleDelete}){\n  const [currentForSaleItems, setCurrentForSaleItems] = useState([]);\n  // const [isEditing, setIsEditing] = useState(false);\n  const { postTitle, itemPrice, itemDescription, category_id } = currentForSaleItems\n  let {post_id} = useParams();\n  const navigate = useNavigate();\n  \n  useEffect(()=>{\n    fetch(`/for_sale_items/${post_id}`)\n    .then((r)=>r.json())\n    .then((data)=>setCurrentForSaleItems(data))\n  },[])\n\n// console.log(currentForSaleItems)\n  function handleDelete(post_id){\n    fetch(`/for_sale_items/${post_id}`,{\n      method: \"DELETE\",\n    }).then(()=>{\n      handleDelete(currentForSaleItems.id)\n      navigate(\"/\")\n    })\n  }\n\n  return (\n    <div>\n      <h1>{postTitle}</h1>\n      <Card.Img src=\"http://placeimg/com/300/300/animals\" />\n      <Card.Text>$${itemPrice}</Card.Text>\n      <Card.Text>{category_id}<br/>{itemDescription}</Card.Text>\n      {user ? <div>\n        <Button>Edit</Button>\n        <Button variant=\"outline-info\" size=\"sm\" onClick={handleDelete(post_id)}>\n            <BsFillTrashFill />\n        </Button>\n        </div>\n        :\n        <Button>Click here to contact Seller</Button> \n        }\n      \n    </div>\n  )\n}\n\nexport default PostDetails","/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/components/pages/Posts/EditPost.jsx",[],"/Users/MarlenaTsang/Documents/Development/Code/Mod5/e-mart/my-app/src/firebase.jsx",["106"],"import { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getStorage } from 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAaxWZO4o8TdPpF-r-xrTzGSDOkFlvvkug\",\n  authDomain: \"e-mart-imgs.firebaseapp.com\",\n  projectId: \"e-mart-imgs\",\n  storageBucket: \"e-mart-imgs.appspot.com\",\n  messagingSenderId: \"897038941837\",\n  appId: \"1:897038941837:web:b34ccecc113e01f46d2cc4\",\n  measurementId: \"G-HL8H6D8HVQ\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nexport const storage = getStorage(app);",{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"107","replacedBy":"111"},{"ruleId":"109","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":38,"column":7,"nodeType":"115","endLine":38,"endColumn":9,"suggestions":"116"},{"ruleId":"113","severity":1,"message":"114","line":43,"column":5,"nodeType":"115","endLine":43,"endColumn":7,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":7,"column":8,"nodeType":"120","messageId":"121","endLine":7,"endColumn":17},{"ruleId":"118","severity":1,"message":"122","line":19,"column":10,"nodeType":"120","messageId":"121","endLine":19,"endColumn":18},{"ruleId":"113","severity":1,"message":"123","line":106,"column":7,"nodeType":"115","endLine":106,"endColumn":9,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":178,"column":20,"nodeType":"127","endLine":178,"endColumn":50},{"ruleId":"107","replacedBy":"128"},{"ruleId":"109","replacedBy":"129"},{"ruleId":"118","severity":1,"message":"119","line":2,"column":8,"nodeType":"120","messageId":"121","endLine":2,"endColumn":17},{"ruleId":"113","severity":1,"message":"130","line":19,"column":5,"nodeType":"115","endLine":19,"endColumn":7,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":22,"column":12,"nodeType":"120","messageId":"134","endLine":22,"endColumn":24},{"ruleId":"118","severity":1,"message":"135","line":16,"column":7,"nodeType":"120","messageId":"121","endLine":16,"endColumn":16},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],["136"],["137"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clearErrors'. Either include it or remove the dependency array. If 'clearErrors' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["138"],["139"],"no-unused-vars","'PostCards' is defined but never used.","Identifier","unusedVar","'favorite' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'imageListRef'. Either include it or remove the dependency array.",["140"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["136"],["137"],"React Hook useEffect has a missing dependency: 'post_id'. Either include it or remove the dependency array.",["141"],"no-redeclare","'handleDelete' is already defined.","redeclared","'analytics' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"142","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [clearErrors]",{"range":"149","text":"150"},{"range":"151","text":"150"},"Update the dependencies array to be: [imageListRef]",{"range":"152","text":"153"},"Update the dependencies array to be: [post_id]",{"range":"154","text":"155"},[955,957],"[clearErrors]",[1175,1177],[2981,2983],"[imageListRef]",[741,743],"[post_id]"]